@model IEnumerable<ResinaSoft_ASP.ViewModels.PersonTaskViewModel.PersonTaskViewModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "PersonToTask";
}

<h1>@ViewBag.PersonName</h1>
<hr />
<br />
<p>
    <a class="upButtonTask" asp-action="AddTask" asp-route-personId="@ViewBag.PersonId">Assing Task</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Task.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Task.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Task.Deadline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskStatus)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Task.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Task.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Task.Deadline)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskStatus)
            </td>

            <td class="otherAction">
                @Html.ActionLink("Edit", "Edit", new { taskId = item.Task.Id, personId = item.Person.Id }, new { @class= "otherAction"})
            </td>
            <td class="otherAction">
                @Html.ActionLink("Delete", "Delete", new { taskId = item.Task.Id, personId = item.Person.Id }, new { @class = "otherAction" })
            </td>
        </tr>
}
    </tbody>
</table>
